 investigate the entire Flutter project implementation, including codebase, dependencies, assets, and configurations. Identify areas for optimization like unused code, large assets, or inefficient libraries. Then, prepare the project for building a release APK by implementing size reduction techniques such as code shrinking with ProGuard/R8, asset compression, tree shaking, split APKs for different architectures, and removing debug symbols. Ensure the final APK has a very small size while maintaining functionality, and provide step-by-step instructions for building the optimized release APK